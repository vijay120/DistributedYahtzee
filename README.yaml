Names: Tum Chaturapruek, Eoin Nugent, Vijay Ramakrishnan


Reflections:
- Design
	- Good.

- Implementation
	- Quite good.

Testing scripts (run one in each tab):

	# run the yahtzee_manager -- if you change node_name make sure you change it in every tab.
	bash test_yahtzee_manager.sh node_name
	# sanity check
	bash test_external_controller.sh node_name
	# spawn players
	bash test_yahtzee_player1.sh    vijay1 enugent1 hunter1 node_name@$(hostname -s)
	bash test_yahtzee_player1.sh    vijay2 enugent2 hunter2 node_name@$(hostname -s)
	# request a tournament
	bash test_external_controller.sh node_name
	# log enugent1 out
	bash test_player_controller.sh  vijay1 enugent1
	# check statistics after the match
	erl -noshell -run external_controller main node_name@$(hostname -s) user_info enugent2
	erl -noshell -run external_controller main node_name@$(hostname -s) user_info enugent2

Testing notes:
	- After running test_external_controller, make sure it halts.
	- After running test_player_controller, make sure the corresopnding player logs out.


Tested:
[/] login/logout works
	[/] login with the same username/password
	[/] login with the a wrong password
	[/] crashing implies logout
	[/] logout update the user table
[/] statistics report
	[/] user_info with external controller
	[/] update stats after each match

Questions:
	- Why does player A always win?

Known bugs:
	- External controller sends {tournament_info, Pid, {TournamentId}} through a command line.
	So, for TournamentId we need to construct a PID. As far as I know, list_to_pid doesn't work
	when the node is not the same.

TODO:
	[/] change tournament status at the end
	[Eoin] more-than-2-players system
	[/] a bye mechanism
	[/] monitoring
	[/] standard yahtzee
	[/] implement best-of-x
		[/] ignore game-per-match k when k is not a positive odd number


Questions to ask
	- Can we construct a pid from string remotely?
	- Can we sneak in user@node?
	- Error messages not halt?